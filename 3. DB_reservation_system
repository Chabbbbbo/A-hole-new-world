# SQLitet3를 이용한 Reservation System(User-Admin 개별) 
#관련 블로그 내용 : https://velog.io/@cbkyeong/DB-%EC%82%AC%EC%9A%A9-%EC%8B%A4%EC%A0%84%ED%8E%B8No%EA%B0%84%EB%8B%A8-7na48per

import sqlite3

### User DB
class UserDBManager():
    def init_db(self):
        self.connect = sqlite3.connect('/home/aiffel-dj60/SQLite3/RTXreservation.db')
        self.cursor = self.connect.cursor()

    def close_db(self):
        self.connect.commit()
        self.connect.close()
    # 1) 예약
    def set_reservation(self):
        self.init_db()
        self.cursor.execute("CREATE TABLE IF NOT EXISTS user_reservation \
            (name TEXT NOT NULL, product INT NOT NULL, quantatity INT NOT NULL, phone PRIMARY KEY)")
        try : 
            user_name = str(input('고객님의 이름을 입력해주세요 : '))
            product_num = int(input('구매할 제품 번호를 입력해주세요 : '))
            quantatity_num = int(input('구매할 수량을 입력해주세요 :'))
            phone_num = int(input("핸드폰 번호를 입력해주세요('-' 없이) : "))
            self.connect.execute(
            'INSERT INTO user_reservation (name, product, quantatity, phone) \
            VALUES (?, ?, ?, ?)', \
            (user_name, product_num, quantatity_num, phone_num)
            )
            self.close_db()
            return
        except:
            print('해당 문자 또는 숫자를 입력해주세요!')
            self.close_db()
            return self.set_reservation()

    # 2) 조회
    def read_reservation(self, phone_num):
        self.init_db()
        self.cursor.execute(f"SELECT * FROM user_reservation WHERE phone = {phone_num}")
        user_list = list(self.cursor.fetchall())
        self.close_db()
        print('=== 이름 ==== 제품 ==== 수량 ==== 휴대폰 번호====')
        for user in user_list:
            print(f'   {user[0]}      {user[1]}번      {user[2]}개       {user[3]}    ')

    # 3) 취소
    def del_reservation(self, phone_num, user_name):
        self.init_db()
        self.cursor.execute(f"DELETE FROM table1 WHERE name = {user_name} AND phone = {phone_num}")
        self.close_db()
        print('예약이 취소되었습니다.')

    

#### User Main
class UserMain():
    def __init__(self):
        self.user_db_manager = UserDBManager()

    def print_menu(self):
        print('''
        [RTX 4000 시리즈 그래픽 카드 예약 구매 메인 시스템에 접속했습니다:)]
        [1] 예약 구매하기 [2] 예약 조회하기 [3] 예약 취소하기 [4] 예약 페이지 나가기 
        ''')

    def select_menu(self):
        while(1):
            self.print_menu()
            try: 
                select_num = int(input('실행 번호를 입력해주세요 : '))

                if (select_num == 1):
                    print('예약 구매 페이지 입니다.')
                    print('''
                    [RTX 4000 시리즈] (모든 요금은 VAT 포함입니다!)
                    [1] RTX4800TI - 1,999,000원 
                    [2] RTX4800   - 1,484,000원
                    [3] RTX4700TI - 1,217,000원
                    [4] RTX4700   - 1,489,000원
                    [5] RTX4600   - 768,000원

                    구매하시겠습니까? [1] Yes    [2] No
                    ''')
                    choice_num = int(input('번호 입력 : ')) 
                    try:
                        if (choice_num == 1):
                            self.user_db_manager.set_reservation()
                        else:
                            print('다음에 또 들려주세요~:)')
                            return 
                    except: 
                        print('다음에 또 들려주세요~:)')
                        return 

                if (select_num == 2):
                    phone_num = int(input("핸드폰 번호를 입력해주세요('-' 없이) : "))
                    self.user_db_manager.read_reservation(phone_num)

                if (select_num == 3):
                    try:
                        user_name = str(input("예약한 이름을 입력해주세요 : "))
                        phone_num = int(input("핸드폰 번호를 입력해주세요('-' 없이) : "))
                        self.user_db_manager.del_reservation(user_name, phone_num)
                    except:
                        print('정보를 정확히 입력해주세요.')
                        self.select_menu()
                if (select_num == 4):
                    main()
            except:
                print('상기 숫자를 입력해주세요!')
                continue



### Admin DB
class AdminDBManager():
    def init_db(self):
        self.connect = sqlite3.connect('/home/aiffel-dj60/SQLite3/RTXreservation.db')
        self.cursor = self.connect.cursor()

    def close_db(self):
        self.connect.commit()
        self.connect.close()

    # 1) 예약 현황 조회    
    def 


    # 2) 제품 가격 수정





### Admin main
class AdminMain():
    def print_admin_menu():
        print('''
        관리자님 어서오세요! 메인 시스템에 접속하셨습니다:)
        [1] 예약 현황 조회 [2] 제품 가격 수정 [3] 관리자 시스템 종료
        ''')
        
    def select_admin_menu():
        while(1):
            self.print_admin_menu()
            try:
                select_num = int(input('실행번호 : '))
                if (select_num == 1):
                    print('예약현황 시스템')

                if (select_num == 2):
                
                if (select_num == 3):
                    main()
            except:
                print('상기 숫자를 입력해주세요!')
                continue
    






# #### 로그인 
# class LoginSystem():
    
#     def



#     #### 회원가입
#     def sign_up():





# ##### Admin 시스템
# class AdminSystem():








# #### User 시스템
# class UserSystem():










def print_main_message():
    print('\n','==' * 20)
    print('RTX 판매소에 오신 것을 환영합니다:)!\n')
    print('[1] 로그인 [2] 회원가입 [3] 시스템 종료')

def main():
    user_main = UserMain()
    while(1):
        print_main_message()
        try: 
            select_num = int(input("실행 번호 : "))
            if (select_num == 1):
                user_main.select_menu()
                #로그인 시스템

            # if (select_num == 2):
            #     # 회원가입 시스템

            else:
                print('상기 숫자를 입력해주세요:)! ')
                continue

        except:
            print('위에 해당하는 숫자를 입력해주세요!')
            continue

if __name__ == "__main__":
	main()
